<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Sass</title>
      <link href="/echo5507.github.io/2019/05/26/Sass/"/>
      <url>/echo5507.github.io/2019/05/26/Sass/</url>
      
        <content type="html"><![CDATA[<h1 id="Sass-介紹"><a href="#Sass-介紹" class="headerlink" title="Sass 介紹"></a>Sass 介紹</h1><p>sass是一種基於css所產生的高階語言，他將一般程式語言所擁有邏輯概念和變數帶入css樣式表中，讓我們在撰寫網站的樣式時，可以用更快速、更方便的方式撰寫。它允許你使用變量、嵌套規則、 mixins、導入等眾多功能，並且完全兼容CSS語法。Sass有助於保持大型樣式表結構良好，同時也讓你能夠快速開始小型項目，特別是在搭配 Compass樣式庫一同使用時。</p> <a id="more"></a><h1 id="Sass-語法"><a href="#Sass-語法" class="headerlink" title="Sass 語法"></a>Sass 語法</h1><p> Sass有兩種語法。第一種被稱為SCSS (Sassy CSS)，是一個CSS3語法的擴充版本，這份參考資料使用的就是此語法。也就是說，所有符合CSS3語法的樣式表也都是具有相同語法意義的SCSS文件。另外，SCSS理解大多數CSS hacks以及瀏覽器專屬語法，例如IE古老的filter語法。這種語種語法的樣式表文件需要以.scss擴展名。</p><p>第二種比較老的語法成為縮排語法（或者就稱為”Sass”），提供了一種更簡潔的CSS書寫方式。它不使用花括號，而是通過縮排的方式來表達選擇符的嵌套層級，而且也不使用分號，而是用換行符來分隔屬性。很多人認為這種格式比SCSS更容易閱讀，書寫也更快速。縮排語法具有Sass的所有特色功能，雖然有些語法上稍有差異。使用此種語法的樣式表文件需要以.sass作為擴展名。</p><h2 id="SCSS-語法範例"><a href="#SCSS-語法範例" class="headerlink" title="SCSS 語法範例"></a>SCSS 語法範例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.menu&#123;</span><br><span class="line">    ul&#123;..&#125;</span><br><span class="line">    li&#123;..&#125;</span><br><span class="line">    a &#123;..&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="SASS-語法範例"><a href="#SASS-語法範例" class="headerlink" title="SASS 語法範例"></a>SASS 語法範例</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">.menu</span><br><span class="line">  ul     //寫樣式必須2個空白或一個tab，且不用&#123; &#125;</span><br><span class="line">    font-size:空白30px</span><br><span class="line">    li</span><br><span class="line">      color:空白red //不需要加;</span><br></pre></td></tr></table></figure><h1 id="SASS-巢狀結構"><a href="#SASS-巢狀結構" class="headerlink" title="SASS 巢狀結構"></a>SASS 巢狀結構</h1><p>巢狀結構算是最常被使用的，透過巢狀式的結構，可清楚的知道元素上下層的關聯性，同時也可減少重覆的編寫開頭。<br>Sass 的巢狀分為三種：</p><h2 id="選擇器巢狀"><a href="#選擇器巢狀" class="headerlink" title="選擇器巢狀"></a>選擇器巢狀</h2><p>範例</p><p>假設我們有一段這樣的結構：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&lt;header&gt;</span><br><span class="line">&lt;nav&gt;</span><br><span class="line">    &lt;a href=“##”&gt;Home&lt;/a&gt;</span><br><span class="line">    &lt;a href=“##”&gt;About&lt;/a&gt;</span><br><span class="line">    &lt;a href=“##”&gt;Blog&lt;/a&gt;</span><br><span class="line">&lt;/nav&gt;</span><br><span class="line">&lt;header&gt;</span><br></pre></td></tr></table></figure></p><p>想選中 header 中的 a 標籤，在寫 CSS 會這樣寫：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">nav a &#123;</span><br><span class="line">  color:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">header nav a &#123;</span><br><span class="line">  color:green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>那麼在 Sass 中，就可以使用選擇器的巢狀來實現：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">nav &#123;</span><br><span class="line">  a &#123;</span><br><span class="line">    color: red;</span><br><span class="line">    header &amp; &#123;</span><br><span class="line">      color:green;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;  </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="屬性巢狀"><a href="#屬性巢狀" class="headerlink" title="屬性巢狀"></a>屬性巢狀</h2><p>CSS 有一些屬性字首相同，只是字尾不一樣，比如：border-top/border-right，與這個類似的還有 margin、padding、font 等屬性。假設你的樣式中用到了：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">    border-top: 1px solid red;</span><br><span class="line">    border-bottom: 1px solid green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在 Sass 中我們可以這樣寫：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.box &#123;</span><br><span class="line">  border: &#123;</span><br><span class="line">   top: 1px solid red;</span><br><span class="line">   bottom: 1px solid green;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="偽類巢狀"><a href="#偽類巢狀" class="headerlink" title="偽類巢狀"></a>偽類巢狀</h2><p>和屬性巢狀非常類似，只不過他需要藉助<code>&amp;</code>符號一起配合使用。我們就拿經典的“clearfix”為例：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.clearfix&#123;</span><br><span class="line">&amp;:before,</span><br><span class="line">&amp;:after &#123;</span><br><span class="line">    content:&quot;&quot;;</span><br><span class="line">    display: table;</span><br><span class="line">  &#125;</span><br><span class="line">&amp;:after &#123;</span><br><span class="line">    clear:both;</span><br><span class="line">    overflow: hidden;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>編譯出來的 CSS：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">clearfix:before, .clearfix:after &#123;</span><br><span class="line">  content: &quot;&quot;;</span><br><span class="line">  display: table;</span><br><span class="line">&#125;</span><br><span class="line">.clearfix:after &#123;</span><br><span class="line">  clear: both;</span><br><span class="line">  overflow: hidden;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h1 id="SASS-變數"><a href="#SASS-變數" class="headerlink" title="SASS 變數"></a>SASS 變數</h1><p>網頁CSS都常見到重複的數值，未來如果更改其中一項，其他也都要全都找出來，非常浪費時間，因此SASS「變數」就是來處理這樣的狀況。</p><h2 id="變數使用方式"><a href="#變數使用方式" class="headerlink" title="變數使用方式"></a>變數使用方式</h2><p>範例:假設我們樣是必須套用顏色是相同的<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">.header&#123;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.body&#123;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.menu&#123;</span><br><span class="line">    color:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在sass中，我們可以這樣表達:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$color-text:red;  // 設定變數：「$」+「變數」  ，在這宣告一個變數，存放&quot;紅色&quot;。</span><br><span class="line"></span><br><span class="line">.header&#123;</span><br><span class="line">    color:$color-text; //顏色數值替換成「變數」</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.body&#123;</span><br><span class="line">    color:$color-text; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.menu&#123;</span><br><span class="line">    color:$color-text;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下圖左邊為SCSS，右邊為輸出的CSS，輸出顏色與設定的變數顏色是一樣的：</p><p><img src="/echo5507.github.io/2019/05/26/Sass/sass2.jpg" alt="GITHUB"></p><p>範例:也可以將數值資料進行加減乘除運算<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">$font-size-text:30px;  //在這宣告一個變數，存放30px。</span><br><span class="line"></span><br><span class="line">.header&#123;</span><br><span class="line">    font-size:$font-size-text; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.body&#123;</span><br><span class="line">    font-size:$font-size-text/10; //將變數資料除10，得到3px。</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">.menu&#123;</span><br><span class="line">    font-size:$font-size-text+10px; //將變數資料+10px，得到40px。</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下圖左邊為SCSS，右邊為輸出的CSS，計算輸出變數是一樣的：</p><p><img src="/echo5507.github.io/2019/05/26/Sass/sass3.jpg" alt="GITHUB"></p><h2 id="Sass-HSL-function"><a href="#Sass-HSL-function" class="headerlink" title="Sass HSL function"></a>Sass HSL function</h2><h3 id="Darken-amp-Lighten-明亮度"><a href="#Darken-amp-Lighten-明亮度" class="headerlink" title="Darken &amp; Lighten 明亮度"></a>Darken &amp; Lighten 明亮度</h3><p>利用 Darken &amp; Lighten 可以調整顏色的色彩明亮度</p><p>範例</p><p>先定義一個顏色</p><table><tr><td bgcolor="#F0967"><font color="#ffffff">#F09671</font></td></tr></table><br>再定義一個變數叫做<font color="red"><code>$color</code></font><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$color:#F09671;  //將此顏色放入變數內</span><br></pre></td></tr></table></figure><br><br><strong>另用Darken調整暗的程度:</strong><table><tr><td bgcolor="#ee855a"><font color="#ffffff">darken($color,5%) = #ee855a</font></td></tr><tr><td bgcolor="#eb7443"><font color="#ffffff">darken($color,10%) = #eb7443</font></td></tr><tr><td bgcolor="#e9632c"><font color="#ffffff">darken($color,15%) = #e9632c</font></td></tr></table><p><strong>另用Lighten調整亮的程度:</strong><table><tr><td bgcolor="#f2a788"><font color="#ffffff">Lighten($color,5%) = #f2a788</font></td></tr><tr><td bgcolor="#f5b89f"><font color="#ffffff">Lighten($color,10%) = #f5b89f</font></td></tr><tr><td bgcolor="#f7c9b6"><font color="#ffffff">Lighten($color,15%) = #f7c9b6</font></td></tr></table></p><h2 id="import-使用方式"><a href="#import-使用方式" class="headerlink" title="import 使用方式"></a>import 使用方式</h2><p>管理css檔案時，我們可以將檔案劃分成不同組成部分再利用<font color="red"><code>import</code></font>方式將檔案組合管理<br>慣用建檔檔名:</p><font color="red"><code>_variable.scss</code></font>存放相關變數<br><font color="red"><code>_main.scss</code></font>存放相關css文件<br><font color="red"><code>all.scss</code></font>存放<font color="red"><code>import</code></font>進來的文件<br><br>以下是<font color="red"><code>import</code></font>使用將sass變數統整成一個檔案流程:<br><br>首先再scss資料夾新增<font color="red"><code>_variable.scss</code></font>檔案<br><img src="/echo5507.github.io/2019/05/26/Sass/sass5.jpg" alt="GITHUB"><br><br>再將檔案變數放置<font color="red"><code>_variable.scss</code></font>檔案內<br><img src="/echo5507.github.io/2019/05/26/Sass/sass6.jpg" alt="GITHUB"><br><br>再回到all.scss檔案內，新增<font color="red"><code>@import &quot;_variable&quot;</code></font>，即可將變數引入到<font color="red"><code>all.scss</code></font>內<br><img src="/echo5507.github.io/2019/05/26/Sass/sass7.jpg" alt="GITHUB"><br><br>## import 注意事項<br>注意記得要將<font color="red"><code>;</code></font>結尾，否則編譯會錯誤<br><img src="/echo5507.github.io/2019/05/26/Sass/sass8.jpg" alt="GITHUB"><br><br><font color="red"><code>import</code></font>引入檔案時要記得檔案順序，如圖<font color="red"><code>_variable.scss</code></font>必須放在<font color="red"><code>_main.scss</code></font>上方才不會出錯<br>因為<font color="red"><code>_main.scss</code></font>存放css主檔，主檔內有使用<font color="red"><code>_variable.scss</code></font>內的變數，sass是先從最上方文件載入所以必須先載入<font color="red"><code>_variable.scss</code></font><p><img src="/echo5507.github.io/2019/05/26/Sass/sass9.jpg" alt="GITHUB"></p><h2 id="整合-Css-Reset"><a href="#整合-Css-Reset" class="headerlink" title="整合 Css Reset"></a>整合 Css Reset</h2><p>瀏覽器都有自己的預設樣式，而彼此之間都會有些些許的差異，如果不做一個初始化的動作，整個頁面會出現非預期的版面狀態，比如被預設了一些 margin ，或是字體大小。<br>藉由Css Reset 將瀏覽器預設樣式清除掉，借此將差異之處清除歸零。</p><p>常見的Css Reset有<a href="https://meyerweb.com/eric/tools/css/reset/" target="_blank" rel="noopener">Meyerweb</a>及<a href="https://necolas.github.io/normalize.css/" target="_blank" rel="noopener">Normalize</a><br>2者最大差異之處Meyerweb是將瀏覽器預設Css樣式全部清除，而Normalize則保留部分屬於HTML默認樣式。</p><p>步驟以下:<br>建立<font color="red"><code>_reset.scss</code></font>，將<a href="https://meyerweb.com/eric/tools/css/reset/" target="_blank" rel="noopener">Meyerweb</a>放入<br><img src="/echo5507.github.io/2019/05/26/Sass/sass10.jpg" alt="GITHUB"></p><p>再回到all.scss檔案內，新增<font color="red"><code>@import &quot;_reset.scss&quot;</code></font>，即可將css reset引入到<font color="red"><code>all.scss</code></font>內<br><img src="/echo5507.github.io/2019/05/26/Sass/sass11.jpg" alt="GITHUB"></p><p>順序部分<font color="red"><code>_variable.scss</code></font>→<font color="red"><code>_reset.scss</code></font>→<font color="red"><code>_base.scss</code></font>→<font color="red"><code>_mixin.scss</code></font>→<font color="red"><code>_main.scss</code></font></p><h1 id="Mixin"><a href="#Mixin" class="headerlink" title="Mixin"></a>Mixin</h1><p>撰寫CSS時都會有常用的語法重複寫的經驗，比如 UL LI的CSS一定會寫「float：left;」、「display:block」這些都常寫到，算是重複性的工作。</p><p><font color="red"><code>@mixin</code></font> 幫忙把這些常用語法蒐集起來，需要該語法時再插入「@include+語法名稱」簡化重複性工作。</p><h2 id="Mixin使用方式"><a href="#Mixin使用方式" class="headerlink" title="Mixin使用方式"></a>Mixin使用方式</h2><p>範例:<br>首先先用<font color="red"><code>@mixin</code></font>建立語法名稱，之後將要放入css放置，需要該語法時再插入「@include+語法名稱」，顯示結果如圖片右半部<br><img src="/echo5507.github.io/2019/05/26/Sass/sass12.jpg" alt="GITHUB"></p><p>也可以將參數形式代入<font color="red"><code>@mixin</code></font>內<br><img src="/echo5507.github.io/2019/05/26/Sass/sass13.jpg" alt="GITHUB"></p><p>多個參數時，使用方式<br><img src="/echo5507.github.io/2019/05/26/Sass/sass14.jpg" alt="GITHUB"></p><h2 id="Mixin響應式運用"><a href="#Mixin響應式運用" class="headerlink" title="Mixin響應式運用"></a>Mixin響應式運用</h2><p>運用Mixin與響應式搭配</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">//建立</span><br><span class="line">@mixin + 名稱 &#123;</span><br><span class="line">    @media (裝置寬度) &#123;</span><br><span class="line">        @content //內容會在此出現，在跑回去include內</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//插入</span><br><span class="line"> @include + 名稱()&#123;</span><br><span class="line">   內容</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>範例:<br>建立<font color="red"><code>@mixin pad</code></font><br><img src="/echo5507.github.io/2019/05/26/Sass/sass15.jpg" alt="GITHUB"></p><p>插入<font color="red"><code>@include pad</code></font>，顯示結果如右半部，當裝置768px時<font color="red">.header</font>寬度變成200px,字體大小更改成20px;<br><img src="/echo5507.github.io/2019/05/26/Sass/sass16.jpg" alt="GITHUB"></p><p>2個以上<font color="red"><code>@mixin</code></font><br><img src="/echo5507.github.io/2019/05/26/Sass/sass17.jpg" alt="GITHUB"></p><p>另用變數方式寫法:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">@mixin bp($bp)&#123;    </span><br><span class="line">    @media (max-width: $bp)&#123;</span><br><span class="line">        @content</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>範例<br><img src="/echo5507.github.io/2019/05/26/Sass/sass18.jpg" alt="GITHUB"></p>]]></content>
      
      
      <categories>
          
          <category> 層疊樣式表語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Sass </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown語法</title>
      <link href="/echo5507.github.io/2019/05/25/markdown/"/>
      <url>/echo5507.github.io/2019/05/25/markdown/</url>
      
        <content type="html"><![CDATA[<h2 id="Markdown-介紹"><a href="#Markdown-介紹" class="headerlink" title="Markdown 介紹"></a>Markdown 介紹</h2><p>Markdown 是一種輕量級標記式語言， 它有純文字標記的特性，讓編寫的可讀性提高，這是在以前很多電子郵件中就已經有的寫法，而目前也有很多網站都使用 Markdown 來撰寫說明文件或是在論壇上發表文章與發送訊息。</p> <a id="more"></a><h3 id="Markdown-優點"><a href="#Markdown-優點" class="headerlink" title="Markdown 優點"></a>Markdown 優點</h3><ul><li>相較 HTML 之下，不會夾雜很多不必要的標籤，讓可讀性提高。</li><li>不需要像程式碼一樣縮排。</li></ul><h3 id="Markdown-缺點"><a href="#Markdown-缺點" class="headerlink" title="Markdown 缺點"></a>Markdown 缺點</h3><ul><li>若使用在像 wordpress 的網站時，要調整一些樣式變化是不太方便的。</li><li>需習慣 Markdown 的編輯方式。</li></ul><h3 id="Markdown-相關實用網站"><a href="#Markdown-相關實用網站" class="headerlink" title="Markdown 相關實用網站"></a>Markdown 相關實用網站</h3><ul><li>即時編譯 Markdown 語法所顯示的版面<ul><li><a href="http://markdownlivepreview.com/" target="_blank" rel="noopener">http://markdownlivepreview.com/</a></li></ul></li><li>將 HTML 語法轉為 Markdown<ul><li><a href="https://domchristie.github.io/turndown/" target="_blank" rel="noopener">https://domchristie.github.io/turndown/</a></li></ul></li></ul><h2 id="字體"><a href="#字體" class="headerlink" title="字體"></a>字體</h2><p>字體樣式是使用在一般文字中加強文字重要性，或是表示標題，粗體通常會用在一段文字中，強調某些字是這個語句中的重點，而標題字會依照字體大小來表示出這個標題的主要性，使用標題字的 Markdown 語法要特別注意 # 號越少標題越大，也就代表標題的重要性越高。</p><h3 id="粗體"><a href="#粗體" class="headerlink" title="粗體"></a>粗體</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**bold**</span><br></pre></td></tr></table></figure><h3 id="標題字"><a href="#標題字" class="headerlink" title="標題字"></a>標題字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># 標題</span><br></pre></td></tr></table></figure><h3 id="次標題字"><a href="#次標題字" class="headerlink" title="次標題字"></a>次標題字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">## 次標題</span><br></pre></td></tr></table></figure><h3 id="小標題字"><a href="#小標題字" class="headerlink" title="小標題字"></a>小標題字</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">###### 小標題</span><br></pre></td></tr></table></figure><p><img src="/echo5507.github.io/2019/05/25/markdown/20111449FkQfya1mSy.png" alt="GITHUB"></p><h2 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h2><h3 id="無序清單"><a href="#無序清單" class="headerlink" title="無序清單"></a>無序清單</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">* Item 1</span><br><span class="line">* Item 2</span><br><span class="line">  * Item a</span><br><span class="line">  * Item b</span><br></pre></td></tr></table></figure><p>顯示畫面</p><ul><li>Item 1</li><li>Item 2<ul><li>Item a</li><li>Item b</li></ul></li></ul><h3 id="有序清單"><a href="#有序清單" class="headerlink" title="有序清單"></a>有序清單</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">1. Item 1</span><br><span class="line">2. Item 2</span><br><span class="line">3. Item 3</span><br></pre></td></tr></table></figure><p>顯示畫面</p><ol><li>Item 1</li><li>Item 2</li><li>Item 3</li></ol><h2 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h2><p>Markdown製作表格使用<code>|</code>來分隔不同的單元格，使用<code>-</code>來分隔表頭和其他行。</p><h3 id="單元格和表頭"><a href="#單元格和表頭" class="headerlink" title="單元格和表頭"></a>單元格和表頭</h3><p>範例<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">name | age</span><br><span class="line">---- | ---</span><br><span class="line">LearnShare | 12</span><br><span class="line">Mike |  32</span><br></pre></td></tr></table></figure></p><p>顯示畫面</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>LearnShare</td><td>12</td></tr><tr><td>Mike</td><td>32</td></tr></tbody></table><p>為了美觀，可以使用空格對齊不同行的單元格，並在左右兩側都使用|來標記單元格邊界：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|    name    | age |</span><br><span class="line">| ---------- | --- |</span><br><span class="line">| LearnShare |  12 |</span><br><span class="line">| Mike       |  32 |</span><br></pre></td></tr></table></figure></p><p>顯示畫面</p><table><thead><tr><th>name</th><th>age</th></tr></thead><tbody><tr><td>LearnShare</td><td>12</td></tr><tr><td>Mike</td><td>32</td></tr></tbody></table><h3 id="對齊"><a href="#對齊" class="headerlink" title="對齊"></a>對齊</h3><p>在表頭下方的分隔線標記中加入:，即可標記下方單元格內容的對齊方式：</p><ul><li><code>:---</code> 代表左對齊</li><li><code>:--:</code> 代表居中對齊</li><li><code>---:</code> 代表右對齊</li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">| left | center | right |</span><br><span class="line">| :--- | :----: | ----: |</span><br><span class="line">| aaaa | bbbbbb | ccccc |</span><br><span class="line">| a    | b      | c     |</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">left</th><th style="text-align:center">center</th><th style="text-align:right">right</th></tr></thead><tbody><tr><td style="text-align:left">aaaa</td><td style="text-align:center">bbbbbb</td><td style="text-align:right">ccccc</td></tr><tr><td style="text-align:left">a</td><td style="text-align:center">b</td><td style="text-align:right">c</td></tr></tbody></table><pre><code>如果不使用對齊標記，單元格中的內容默認左對齊；表頭單元格中的內容會一直居中對齊（不同的實現可能會有不同表現）。</code></pre><h3 id="插入其他內容"><a href="#插入其他內容" class="headerlink" title="插入其他內容"></a>插入其他內容</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|     name     | age |             blog                     |</span><br><span class="line">| ------------ | --- | -------------------------------------|</span><br><span class="line">|   GOOGLE     |  12 | [GOOGLE](https://www.google.com.tw/) |</span><br><span class="line">|   YAHOO      |  32 | [YAHOO](http://www.yahoo.com.tw)     |</span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>age</th><th>blog</th></tr></thead><tbody><tr><td>GOOGLE</td><td>12</td><td><a href="https://www.google.com.tw/" target="_blank" rel="noopener">GOOGLE</a></td></tr><tr><td>YAHOO</td><td>32</td><td><a href="http://www.yahoo.com.tw" target="_blank" rel="noopener">YAHOO</a></td></tr></tbody></table><h2 id="CheckBox"><a href="#CheckBox" class="headerlink" title="CheckBox"></a>CheckBox</h2><p>CheckBox 常用在確認事情是否完成，在使用 Checkbox 要注意，中括號中的 x 就代表這個項目是被打勾的，它並不會主動紀錄勾選過的內容，所以使用時要確認勾選過的內容是否有增加 ｘ，避免混亂。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">- [x] This is a complete item</span><br><span class="line">- [ ] This is an incomplete item</span><br></pre></td></tr></table></figure></p><p>顯示畫面<br><img src="/echo5507.github.io/2019/05/25/markdown/20111449uMfOyixLZN.png" alt="GITHUB"></p><h2 id="區塊"><a href="#區塊" class="headerlink" title="區塊"></a>區塊</h2><p>區塊分為小區塊跟大區塊，通常用於一段相關內容的撰寫，一小段文字或是註釋都可能會用小區塊來表示，而篇幅較大又不希望與一般段落內容混在一起的文字，就會使用大區塊來包覆。</p><p>小區塊語法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">`字句前後加上反引號`</span><br></pre></td></tr></table></figure></p><p>大區塊語法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">前後個加四個空白</span><br></pre></td></tr></table></figure></p><p>顯示畫面<br><code>字句前後加上反引號</code></p><pre><code>前後個加四個空白   </code></pre><h2 id="程式碼"><a href="#程式碼" class="headerlink" title="程式碼"></a>程式碼</h2><p>插入程式碼語法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">```js</span><br><span class="line">這邊是程式碼</span><br><span class="line">```js</span><br></pre></td></tr></table></figure></p><p>顯示畫面<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">function myFunction(A1,A2)&#123;</span><br><span class="line">    return A1 * A2; //傳回A1乘上A2的值</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="圖片"><a href="#圖片" class="headerlink" title="圖片"></a>圖片</h2><p>插入圖片語法<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![圖片替代文字](圖片網址)</span><br></pre></td></tr></table></figure></p><p>顯示結果：<br><img src="/echo5507.github.io/2019/05/25/markdown/IMG_6883_resized.jpg" alt="圖片替代文字"></p><h4 id="階層式區塊"><a href="#階層式區塊" class="headerlink" title="階層式區塊"></a>階層式區塊</h4><p>階層式區塊在表現結構或功能關係上是相當好用的呈現形式</p><p>階層式區塊語法：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&gt; Quote one sentences</span><br><span class="line">&gt;&gt;Quote two sentences</span><br><span class="line">&gt;&gt;Quote two sentences</span><br><span class="line">&gt;&gt;&gt;Quote three sentences</span><br></pre></td></tr></table></figure></p><p>顯示結果：<br><img src="/echo5507.github.io/2019/05/25/markdown/201114499qQoeCIOyH.png" alt="圖片替代文字"></p><h3 id="超連結"><a href="#超連結" class="headerlink" title="超連結"></a>超連結</h3><h4 id="普通連結"><a href="#普通連結" class="headerlink" title="普通連結"></a>普通連結</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">格式為[link text](URL &apos;title text&apos;)。</span><br></pre></td></tr></table></figure><p>範例</p><p><code>[Google](http://www.google.com/)</code></p><p>顯示結果:</p><p><a href="http://www.google.com/" target="_blank" rel="noopener">Google</a></p><h4 id="指向本地文件的鏈接"><a href="#指向本地文件的鏈接" class="headerlink" title="指向本地文件的鏈接"></a>指向本地文件的鏈接</h4><p>範例</p><p><code>[icon.gif](./images/icon.gif)</code></p><p>顯示結果:</p><p><a href="../markdown/icon.gif">icon.gif</a></p>]]></content>
      
      
      <categories>
          
          <category> 標記式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>股東權益內容</title>
      <link href="/echo5507.github.io/2019/05/24/%E8%82%A1%E6%9D%B1%E6%AC%8A%E7%9B%8A%E5%85%A7%E5%AE%B9/"/>
      <url>/echo5507.github.io/2019/05/24/%E8%82%A1%E6%9D%B1%E6%AC%8A%E7%9B%8A%E5%85%A7%E5%AE%B9/</url>
      
        <content type="html"><![CDATA[<h1 id="股東權益組成項目"><a href="#股東權益組成項目" class="headerlink" title="股東權益組成項目"></a>股東權益組成項目</h1><p>資產總額減去負債總額後的淨資產稱為權益，在公司稱為<font color="#00dd00">股東權益</font> (Stockholders’ equity)。權益應區分為股本、資本公積、保留盈餘、其他權益 及庫藏股票，<font color="#00dd00">其中股本和資本公積合稱為「投入資本」</font>。分別說明如下：</p> <a id="more"></a><h2 id="股本"><a href="#股本" class="headerlink" title="股本"></a>股本</h2><p>指公司向主管機關辦理登記之資本額，即「法定資本」，非經增資或減資手續，不得任意增減。</p><h3 id="普通股股本"><a href="#普通股股本" class="headerlink" title="普通股股本"></a>普通股股本</h3><p>普通股本也稱普通股權，是指股東已按普通股票的票面價值或設定價值認購的股本。</p><p>在對公司的收入以及資產的索取權優先次序上，普通股股東排在債權人以及優先股股東之後。比如，公司必須先償付債券及貸款的利息以及優先股的股息，方可分配股息予普通股股東。而一旦公司清盤，資產變現後的所得，必須先清償所有債權人以及優先股股東，剩下的才屬普通股股東所有。公司的董事由普通股股東任命，一張普通股代表一單位的投票權。普通股因為容易換手，二手市場活躍，是最為普及的證券。</p><h3 id="特別股股本"><a href="#特別股股本" class="headerlink" title="特別股股本"></a>特別股股本</h3><p>特別股票指與普通股股票持有人的權利不相同的股份，包括優先股、混合股、後配股、可轉換股、可贖回股等股票。</p><p>特別股息高於普通股且分配股息和公司剩餘財產的順序先於普通股、享有的權利應在章程中規定。股份公司有權在適當的時期，收回特別股，收回的條件和時間。</p><h2 id="資本公積"><a href="#資本公積" class="headerlink" title="資本公積"></a>資本公積</h2><p>資本公積是企業收到的投資者的超出其在企業註冊資本所占份額，以及直接計入所有者權益的利得和損失等。</p><h3 id="股票發行溢價"><a href="#股票發行溢價" class="headerlink" title="股票發行溢價"></a>股票發行溢價</h3><p>超過票面金額發行股票所得之溢價， 可分作： </p><ul><li>資本公積－普通股股票溢價 </li><li>資本公積－特別股股票溢價</li></ul><h3 id="庫藏股票交易"><a href="#庫藏股票交易" class="headerlink" title="庫藏股票交易"></a>庫藏股票交易</h3><p>指公司出售庫藏 股票時，若<font color="#00dd00">售價高於收回成本產生之溢價</font>。</p><h3 id="受領股東贈與"><a href="#受領股東贈與" class="headerlink" title="受領股東贈與"></a>受領股東贈與</h3><p>股東贈送本公司已發行之股票為「資本公積－受領股東贈與」。</p><h2 id="保留盈餘"><a href="#保留盈餘" class="headerlink" title="保留盈餘"></a>保留盈餘</h2><p>指公司歷年累積之損益、未以現金或其他資產方式分配給股東或轉為資本而仍保留於公司者。</p><h3 id="法定盈餘公積"><a href="#法定盈餘公積" class="headerlink" title="法定盈餘公積"></a>法定盈餘公積</h3><p>法定盈餘公積金統一規定必須提取的公積金，它的提取順序在彌補虧損之後，按當年稅後利潤的10%提取。盈餘公積金已達到註冊資本50%時不再提取。<br>非公司制企業法定盈餘公積的提取比例可超過凈利潤的10%。</p><h3 id="特別盈餘公積"><a href="#特別盈餘公積" class="headerlink" title="特別盈餘公積"></a>特別盈餘公積</h3><p>特別盈餘公積，係指企業依照自己的章程或股東會盈餘分 派之決議，而自盈餘中指撥暫不發放給投資者的部份。企業自行指撥盈餘之目的，係在限制企業分派股息及紅利給投資者，而把企業的資金保留在企業，備供營運。</p><h3 id="未分配盈餘"><a href="#未分配盈餘" class="headerlink" title="未分配盈餘"></a>未分配盈餘</h3><p>企業未作分配的利潤。它在以後年度可繼續進行分配，在未進行分配之前，屬於所有者權益的組成部分。從數量上來看，未分配利潤是期初未分配利潤加上本期實現的凈利潤，減去提取的各種盈餘公積和分出的利潤後的餘額。</p><p>未分配利潤有兩層含義：</p><ul><li>留待以後年度處理的利潤</li><li>未指明特定用途的利潤。相對於所有者權益的其他部分來說，企業對於未分配利潤的使用有較大的自主權。</li></ul><h2 id="其他權益"><a href="#其他權益" class="headerlink" title="其他權益"></a>其他權益</h2><p>指其他造成權益加減變動的項目。</p><h2 id="庫藏股票"><a href="#庫藏股票" class="headerlink" title="庫藏股票"></a>庫藏股票</h2><p>指公司收回自己流通在外且尚未註銷之股票的成本，應列為權益之減項。</p>]]></content>
      
      
      <categories>
          
          <category> 中級會計學 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公司會計 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>加值型營業稅</title>
      <link href="/echo5507.github.io/2019/05/24/%E5%8A%A0%E5%80%BC%E5%9E%8B%E7%87%9F%E6%A5%AD%E7%A8%85/"/>
      <url>/echo5507.github.io/2019/05/24/%E5%8A%A0%E5%80%BC%E5%9E%8B%E7%87%9F%E6%A5%AD%E7%A8%85/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>公司概念</title>
      <link href="/echo5507.github.io/2019/05/24/%E6%B8%AC%E8%A9%A6%E7%94%A8/"/>
      <url>/echo5507.github.io/2019/05/24/%E6%B8%AC%E8%A9%A6%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="公司組成要素"><a href="#公司組成要素" class="headerlink" title="公司組成要素"></a>公司組成要素</h1><p>我國<a href="https://law.moj.gov.tw/LawClass/LawAll.aspx?pcode=J0080001" target="_blank" rel="noopener">公司法第1條規定</a>，公司的構 成要件有三: </p><ul><li>公司應以營利為目的 </li><li>公司應依照公司法組織、登記、成立 </li><li>公司為社團法人</li></ul><p>法人為法律上賦予其人格，並在法令範圍內享有權利及負擔義務的主體。 法人又可分為<font color="#dd0000"><code>社團法人</code></font>及<font color="#dd0000"><code>財團法人</code></font><br> <a id="more"></a></p><table><thead><tr><th style="text-align:center">法人類型</th><th style="text-align:center">成立要件</th><th style="text-align:center">舉例</th></tr></thead><tbody><tr><td style="text-align:center">社團法人</td><td style="text-align:center">以「<font color="#00dd00">人</font>」的聚集</td><td style="text-align:center">公司組織</td></tr><tr><td style="text-align:center">財團法人</td><td style="text-align:center">以「<font color="#00dd00">財產</font>」的聚集</td><td style="text-align:center">基金會</td></tr></tbody></table><h1 id="公司的種類"><a href="#公司的種類" class="headerlink" title="公司的種類"></a>公司的種類</h1><p>依<a href="https://www.lawbank.com.tw/treatise/lawrela.aspx?lsid=FL011292&amp;ldate=20001115&amp;lno=2,18,19" target="_blank" rel="noopener">公司法第2條規定</a>，公司分為下列四種：</p><table><thead><tr><th style="text-align:center">公司型態</th><th style="text-align:center">股東人數</th><th style="text-align:center">責任</th></tr></thead><tbody><tr><td style="text-align:center">有限公司</td><td style="text-align:center">1人以上</td><td style="text-align:center">有限（以出資額為限）</td></tr><tr><td style="text-align:center">無限公司</td><td style="text-align:center">2人以上</td><td style="text-align:center">無限清償責任</td></tr><tr><td style="text-align:center">兩合公司</td><td style="text-align:center">1人以上無限責任股東<font color="#dd0000"><br>與<br></font>1人以上有限責任股東</td><td style="text-align:center">無限責任股東連（帶無限清償責任）<br>有限責任股東有限（以出資額為限）</td></tr><tr><td style="text-align:center">股份有限公司</td><td style="text-align:center">2人以上股東 <font color="#dd0000"><br>或<br></font> 政府、法人股東1人</td><td style="text-align:center">有限（就其所認股分為限）</td></tr></tbody></table><p><strong>閉鎖型公司</strong></p><p>我國於104年7月1日增訂閉鎖性股份有限公司之法規。閉鎖性股份有限公司指的是股東人數不超過50人，且在公司章程明定股份轉讓限制之非公開發行股票公司。這是在既有的股份有限公司制度下，再新增的特殊公司組織。</p><p>新修正通過條文也明訂，發起人的出資除現金外，得以公司所需財產、技術、勞務或信用抵充，惟以勞務或信用抵充的股數，不得超過公司發行股份總數的一定比例。此外，為提供新創事業的發起人及股東在股權方面有更自由的規劃空間，新修正通過條文引進國外無票面金額股制度，並由公司自行審酌擇一採行票面金額股或無票面金額股；並允許閉鎖性股份有限公司透過章程規定，發行複數表決權特別股或對特定事項有否決權的特別股等。</p><table><thead><tr><th style="text-align:center"></th><th style="text-align:center">閉鎖性股份有限公司</th><th style="text-align:center">一般股份有限公司</th></tr></thead><tbody><tr><td style="text-align:center">出資種類</td><td style="text-align:center">得以公司事業所需之財產、技術、 勞務或信用抵充。</td><td style="text-align:center">不得以勞務或信用出資</td></tr><tr><td style="text-align:center">股票面額</td><td style="text-align:center">得發行無面值股。</td><td style="text-align:center">不得發行無面值股。</td></tr></tbody></table><h1 id="股份有限公司之特質"><a href="#股份有限公司之特質" class="headerlink" title="股份有限公司之特質"></a>股份有限公司之特質</h1><ul><li>發行股票：將資本劃分為股份，每股金額一律相同，以股票之發行，表彰股東所擁有的權益。 </li><li>股東的責任有限，籌資容易：股東所負責任僅就其所認之股份額為 限；責任風險由多位股東共同負擔而減輕，且資本劃分為面額較小之股 份，容易向一般投資大眾募集資金，使企業規模較易擴大。</li><li>股份可自由轉讓：依公司法第163條之規定，公司股份之轉讓不得以章 程禁止或限制。</li><li>所有權和經營權分離：股東握有公司所有權，而董事（由股東選出）握 有公司經營權，透過所有權和經營權的分離，公司組織不受股東變動而影響。</li></ul>]]></content>
      
      
      <categories>
          
          <category> 中級會計學 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 公司會計 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
